// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROManager.Models;

namespace PROManager.Migrations
{
    [DbContext(typeof(PROManagerContext))]
    [Migration("20190503102028_AFAktivities")]
    partial class AFAktivities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PROManager.Models.AFAktivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AFAktivityTypeId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDateTime");

                    b.Property<int>("PersonId");

                    b.Property<DateTime>("StartDateTime");

                    b.HasKey("Id");

                    b.HasIndex("AFAktivityTypeId");

                    b.HasIndex("PersonId");

                    b.ToTable("AFAktivity");
                });

            modelBuilder.Entity("PROManager.Models.AFAktivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AFAktivityTypeName");

                    b.HasKey("Id");

                    b.ToTable("AFAktivityType");
                });

            modelBuilder.Entity("PROManager.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AwayHomeTeam");

                    b.Property<int?>("AwayTeamId");

                    b.Property<int?>("HomeTeamId");

                    b.Property<DateTime>("MatchDateTime");

                    b.Property<int?>("Ref1Id");

                    b.Property<int?>("Ref2Id");

                    b.Property<int?>("Ref3Id");

                    b.Property<int?>("Ref4Id");

                    b.Property<int?>("ScoreHomeTeam");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("Ref1Id");

                    b.HasIndex("Ref2Id");

                    b.HasIndex("Ref3Id");

                    b.HasIndex("Ref4Id");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("PROManager.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("RefereeCategoryId");

                    b.Property<int?>("RefereeDistriktId");

                    b.Property<int?>("RefereeNumber");

                    b.Property<int?>("RefereeTypeId");

                    b.Property<string>("Ssn");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("RefereeCategoryId");

                    b.HasIndex("RefereeDistriktId");

                    b.HasIndex("RefereeTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PROManager.Models.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Referee");
                });

            modelBuilder.Entity("PROManager.Models.RefereeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeCategoryName");

                    b.HasKey("Id");

                    b.ToTable("RefereeCategory");
                });

            modelBuilder.Entity("PROManager.Models.RefereeDistrikt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeDistriktName");

                    b.HasKey("Id");

                    b.ToTable("RefereeDistrikt");
                });

            modelBuilder.Entity("PROManager.Models.RefereeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeTypeName");

                    b.HasKey("Id");

                    b.ToTable("RefereeType");
                });

            modelBuilder.Entity("PROManager.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("PROManager.Models.AFAktivity", b =>
                {
                    b.HasOne("PROManager.Models.AFAktivityType", "FAktivityType")
                        .WithMany()
                        .HasForeignKey("AFAktivityTypeId");

                    b.HasOne("PROManager.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PROManager.Models.Match", b =>
                {
                    b.HasOne("PROManager.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId");

                    b.HasOne("PROManager.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId");

                    b.HasOne("PROManager.Models.Referee", "Ref1")
                        .WithMany()
                        .HasForeignKey("Ref1Id");

                    b.HasOne("PROManager.Models.Referee", "Ref2")
                        .WithMany()
                        .HasForeignKey("Ref2Id");

                    b.HasOne("PROManager.Models.Referee", "Ref3")
                        .WithMany()
                        .HasForeignKey("Ref3Id");

                    b.HasOne("PROManager.Models.Referee", "Ref4")
                        .WithMany()
                        .HasForeignKey("Ref4Id");
                });

            modelBuilder.Entity("PROManager.Models.Person", b =>
                {
                    b.HasOne("PROManager.Models.RefereeCategory", "RefereeCategory")
                        .WithMany()
                        .HasForeignKey("RefereeCategoryId");

                    b.HasOne("PROManager.Models.RefereeDistrikt", "RefereeDistrikt")
                        .WithMany()
                        .HasForeignKey("RefereeDistriktId");

                    b.HasOne("PROManager.Models.RefereeType", "RefereeType")
                        .WithMany()
                        .HasForeignKey("RefereeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
